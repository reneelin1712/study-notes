{"version":3,"sources":["pages/Home.js","pages/About.js","pages/NotFound.js","pages/Note.js","pages/AddNotes.js","pages/Nav.js","App.js","serviceWorker.js","index.js"],"names":["Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","notes","_this2","fetch","then","res","json","result","tempnotes","map","item","setState","noteList","note","key","react_default","a","createElement","react_router_dom","to","concat","id","className","title","date","content","Fragment","Component","About","NotFound","Note","_ref","match","params","_useState","useState","_useState2","slicedToArray","noteInfo","setNoteInfo","useEffect","_ref2","asyncToGenerator","regenerator_default","mark","_callee","body","wrap","_context","prev","next","sent","stop","apply","arguments","fetchData","pages_NotFound","AddNotes","type","author","time","handleChange","bind","assertThisInitialized","handleAdd","e","target","value","name","defineProperty","preventDefault","tempNote","method","headers","Accept","Content-Type","JSON","stringify","alert","noValidate","onSubmit","htmlFor","placeholder","onChange","rows","cols","Nav","App","pages_Nav","react_router","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed9a6131.chunk.js","sourcesContent":["import React,{Component} from 'react';\n// import notes from './data';\nimport { Link } from 'react-router-dom';\n\n\nclass Home extends Component{\n    constructor(){\n        super();\n        this.state = {\n          notes:[]\n        }\n      }\n\n      componentDidMount(){\n        fetch(`/api/notes/`).then(res=>res.json())\n        .then(result => {\n            const tempnotes = result.map(item=>{\n                return item;\n            })\n            this.setState({\n                notes:tempnotes\n        });\n        });\n      }\n      \n\n    render(){\n\n        const noteList = this.state.notes.map((note,key) => (\n            <Link key={key} to={`/note/${note.id}`} className=\"note-list\">\n            <h4>{note.title}</h4>\n            <div>{note.date}</div>\n            <p>{note.content}...</p>\n            </Link>\n        ))\n        return(\n        <>\n            <h1>Renee's Study Notes</h1>\n            <br></br>\n            <div> \n            {noteList}\n            </div>\n            \n            {/* <NoteList mynotes={this.state.notes} /><NoteList /> */}\n        </>\n    )\n}\n}\n\n\nexport default Home;","import React from 'react';\n\nconst About = () => {\n    return(\n        <>\n            <h1>My Profile</h1>\n\n        </>\n    )\n}\n\nexport default About;","import React from 'react';\n\nconst NotFound = () => (\n        \n            <h1>404: Page Not Found</h1>\n\n      \n    )\n\n\nexport default NotFound;","import React,{useState, useEffect} from 'react';\n// import notes from './data';\n// import NoteList from '../components/NoteList';\nimport NotFound from './NotFound';\n\n\nconst Note = ({ match }) => {\n    const id= match.params.id;\n\n    const[noteInfo, setNoteInfo] = useState({});\n    useEffect(()=>{\n            const fetchData = async() =>{\n                const result = await fetch(`/api/notes/${id}`);\n                const body = await result.json();\n                setNoteInfo(body);\n            }\n        fetchData()\n    },[id])\n\n    if (!noteInfo) {\n        return(\n            <NotFound />\n        )\n    }\n    return(\n        <>\n            <h1>{noteInfo.title}</h1>\n            <p>{noteInfo.content}</p>\n           \n        </>\n    )\n}\n\nexport default Note;","import React,{ Component } from 'react';\n\nclass AddNotes extends Component {\n    constructor() {\n        super();\n        this.state= {\n            id:'',\n            type: '',\n            title:'',\n            author: '',\n            date: '',\n            time: '',\n            content: []\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleAdd = this.handleAdd.bind(this);\n    }\n\n\n    handleChange(e) {\n        const target = e.target;\n        const value = target.value;\n        const name = target.name;\n        \n        this.setState({\n            [name]:value,\n        });\n    }\n\n    handleAdd(e) {\n        e.preventDefault();\n        let tempNote ={\n            id: this.state.id,\n            type: this.state.type,\n            title: this.state.title,\n            author: this.state.author,\n            date: this.state.date,\n            time: this.state.time,\n            content: this.state.content\n        }\n\n        fetch(`/api/notes/add`,{\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(tempNote)\n        });\n\n        this.setState({\n            id:'',\n            type: '',\n            title:'',\n            author: '',\n            date: '',\n            time: '',\n            content: []\n        });\n\n        alert(\"New Study Note Added, check the Home page\");\n\n    }\n\n    render() {\n        return(\n            <div className=\"add-Note\">\n\n            <div className=\"apt-addheading card-header bg-dark text-white\" >\n               Add Note\n            </div>\n\n            \n    \n            <div className=\"card-body\">\n              <form id=\"aptForm\" noValidate onSubmit={this.handleAdd}>\n              <div className=\"form-group form-row\">\n                  <label\n                    className=\"col-md-2 col-form-label text-md-right\"\n                    htmlFor=\"id\"\n                  >\n                    ID\n                  </label>\n                  <div className=\"col-md-10\">\n                    <input\n                      type=\"text\" \n                      className=\"form-control\"\n                      name=\"id\"\n                      placeholder=\"ID\"\n                      value={this.state.id}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                </div>\n\n              <div className=\"form-group form-row\">\n                  <label\n                    className=\"col-md-2 col-form-label text-md-right\"\n                    htmlFor=\"type\"\n                  >\n                    Type\n                  </label>\n                  <div className=\"col-md-10\">\n                    <input\n                      type=\"text\" \n                      className=\"form-control\"\n                      name=\"type\"\n                      placeholder=\"Type\"\n                      value={this.state.type}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"form-group form-row\">\n                  <label\n                    className=\"col-md-2 col-form-label text-md-right\"\n                    htmlFor=\"title\"\n                  >\n                    Title\n                  </label>\n                  <div className=\"col-md-10\">\n                    <input\n                      type=\"text\" \n                      className=\"form-control\"\n                      name=\"title\"\n                      placeholder=\"Title\"\n                      value={this.state.title}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                </div>\n    \n                <div className=\"form-group form-row\">\n                  <label\n                    className=\"col-md-2 col-form-label text-md-right\"\n                    htmlFor=\"ownerName\"\n                  >\n                    Author\n                  </label>\n                  <div className=\"col-md-10\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"author\"\n                      placeholder=\"Author\"\n                      value={this.state.author}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                </div>\n    \n                <div className=\"form-group form-row\">\n                  <label\n                    className=\"col-md-2 col-form-label text-md-right\"\n                    htmlFor=\"Date\"\n                  >\n                    Date\n                  </label>\n                  <div className=\"col-md-4\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control\"\n                      name=\"date\"\n                      id=\"aptDate\"\n                      value={this.state.date}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <label\n                    className=\"col-md-2 col-form-label text-md-right\"\n                    htmlFor=\"Time\"\n                  >\n                    Time\n                  </label>\n                  <div className=\"col-md-4\">\n                    <input\n                      type=\"time\"\n                      className=\"form-control\"\n                      name=\"time\"\n                      id=\"aptTime\"\n                      value={this.state.time}\n                     onChange={this.handleChange}\n                    />\n                  </div>\n                </div>\n    \n                <div className=\"form-group form-row\">\n                  <label className=\"col-md-2 text-md-right\" htmlFor=\"aptNotes\">\n                    Notes\n                  </label>\n                  <div className=\"col-md-10\">\n                    <textarea\n                      className=\"form-control\"\n                      rows=\"4\"\n                      cols=\"50\"\n                      name=\"content\"\n                      id=\"aptNotes\"\n                      placeholder=\"Study Notes\"\n                      value={this.state.content}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                </div>\n    \n                <div className=\"form-group form-row mb-0\">\n                  <div className=\"offset-md-2 col-md-10\">\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-dark d-block ml-auto\"\n                    >\n                      Add Note\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default AddNotes;","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nconst Nav = () => {\n    return(\n        <>\n        <nav>\n            <ul>\n                <li><Link to=\"/\">Home</Link></li>\n                {/* <li><Link to=\"/note\">Note</Link></li> */}\n                <li><Link to=\"/addnotes\">Add Notes</Link></li>\n                <li><Link to=\"/about\">My Profile</Link></li>\n            </ul>\n            </nav>\n        </>\n    )\n}\n\nexport default Nav;","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Note from './pages/Note';\nimport AddNotes from './pages/AddNotes';\nimport Nav from './pages/Nav';\nimport NotFound from './pages/NotFound';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <>\n      <Router>\n        <div className=\"App\">\n          <Nav />\n          <div id=\"page-body\" >\n           \n            <Switch>\n              <Route path=\"/\" component={Home} exact />\n              <Route path=\"/note/:id\" component={Note} />\n              <Route path=\"/addnotes\" component={AddNotes} />\n              <Route path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'jquery/dist/jquery.js';\nimport 'popper.js/dist/umd/popper.js';\nimport 'bootstrap/dist/js/bootstrap.js';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}